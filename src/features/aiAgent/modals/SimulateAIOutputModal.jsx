// src/features/manage/modals/SimulateAIOutputModal.jsx

import React from 'react';
import { X, Download, FileText, BarChart2, Lightbulb, Bot } from 'lucide-react';

const SimulateAIOutputModal = ({ onClose, actionType, outputData = {} }) => {
    // Define mock content based on action type
    const getModalContent = (type) => {
        switch (type) {
            case 'Generate Report Template':
                return {
                    title: 'Generated Report Template: SAR Filing',
                    icon: <FileText size={24} className="theme-text-secondary" />,
                    content: `
**Suspicious Activity Report (SAR) - Draft Template**

**Filing Date:** ${new Date().toLocaleDateString()}
**Prepared By:** AI Agent & [Your Name/Team]

**1. Subject Information:**
   - **Name:** [Subject Name]
   - **Account/Wallet ID:** [Subject Account/Wallet ID]
   - **Address:** [Subject Address]
   - **Jurisdiction:** [Subject Jurisdiction]
   - **DOB/Incorporation Date:** [Subject DOB/Inc. Date]

**2. Suspicious Activity Details:**
   - **Activity Type:** [e.g., Structuring, High-Value Transaction, Unexplained Wealth]
   - **Dates of Activity:** [Start Date] - [End Date]
   - **Transaction IDs:** [List relevant IDs]
   - **Amounts:** [Total Amount & Currency]
   - **Description of Activity:**
     [AI-generated summary of suspicious behavior, e.g., "Frequent, small deposits designed to evade reporting thresholds, followed by large, unexplained withdrawals to offshore accounts."]

**3. Reason for Suspicion:**
   - [AI-flagged reasons: e.g., No clear business purpose, inconsistent with profile, linked to known high-risk entities/addresses.]

**4. Supporting Documentation:**
   - [List of automatically identified evidence: e.g., Transaction logs, KYC documents, blockchain analysis reports.]

**5. Recommended Action:**
   - [AI-suggested action: e.g., Further investigation, Account suspension, Direct filing.]

*This template is a draft generated by the Regulatory AI Agent. Please review, verify, and complete all sections before submission.*
                    `,
                    filename: `SAR_Filing_Template_${new Date().getFullYear()}.docx`
                };
            case 'Generate Risk Assessment':
                return {
                    title: 'Generated Risk Assessment: Client Portfolio',
                    icon: <BarChart2 size={24} className="theme-text-secondary" />,
                    content: `
**Automated Risk Assessment Summary - Client ID: [Client ID / Portfolio Name]**

**Assessment Date:** ${new Date().toLocaleDateString()}
**AI Model Version:** ${outputData.modelVersion || 'v2.1.0'}

**1. Overall Risk Score:**
   - **AI-Calculated Score:** ${outputData.score || '85% (High Risk)'}
   - **Risk Category:** ${outputData.category || 'Enhanced Due Diligence Required'}

**2. Key Risk Factors Identified:**
   - **Jurisdictional Risk:** [e.g., Significant activity with high-risk jurisdictions: Venezuela, Iran.]
   - **Transaction Pattern Risk:** [e.g., Frequent, large-value transactions with varying counterparties lacking clear commercial rationale.]
   - **Source of Funds/Wealth Risk:** [e.g., Unclear or inconsistent declarations regarding origin of substantial funds.]
   - **Digital Asset Vulnerability:** [e.g., Involvement with unaudited smart contracts or high-liquidity pools without adequate security measures.]

**3. Recommendations:**
   - Initiate a Level 3 compliance review.
   - Request updated Source of Funds documentation.
   - Conduct enhanced sanctions screening on all associated entities.
   - Implement real-time monitoring for digital asset transfers.

*This assessment is AI-generated and provides initial insights. Human review and verification are mandatory.*
                    `,
                    filename: `Risk_Assessment_${new Date().getFullYear()}.docx`
                };
            case 'Provide Recommendation':
                return {
                    title: 'AI-Powered Recommendation: Policy Update',
                    icon: <Lightbulb size={24} className="theme-text-secondary" />,
                    content: `
**Recommendation for Policy Update: Digital Asset Custody**

**Date:** ${new Date().toLocaleDateString()}
**Source:** Regulatory AI Agent Analysis of recent SEC guidance and internal risk data.

**1. Issue Identified:**
   - The current "Digital Asset Custody Policy v1.0" does not fully address the new SEC guidance on commingling client and firm digital assets, creating a potential compliance gap.

**2. AI Analysis & Impact:**
   - AI identified 15 instances in Q2 where client digital assets were briefly co-mingled with firm operational assets due to legacy smart contract interactions, which is now explicitly discouraged by new guidance.
   - Potential regulatory fine exposure: High.
   - Reputational risk: Medium.

**3. Proposed Action:**
   - Update "Digital Asset Custody Policy v1.0" to v1.1.
   - Implement an automated smart contract audit check to prevent future commingling.
   - Conduct mandatory staff training on updated custody procedures.

**4. Expected Outcome:**
   - Full compliance with new SEC guidance.
   - Reduced operational risk in digital asset custody.

*This recommendation is provided by the Regulatory AI Agent. Please evaluate its feasibility and impact for implementation.*
                    `,
                    filename: `AI_Recommendation_${new Date().getFullYear()}.docx`
                };
            default:
                return {
                    title: 'AI Output Simulation',
                    icon: <Bot size={24} className="theme-text-secondary" />,
                    content: 'No specific content for this action type. This is a generic AI output simulation.',
                    filename: 'AI_Output_Simulation.docx'
                };
        }
    };

    const modalContent = getModalContent(actionType);

    const handleDownload = () => {
        // Create a Blob from the content
        const blob = new Blob([modalContent.content], { type: 'text/plain;charset=utf-8' });
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');

        link.href = url;
        link.download = modalContent.filename; // Use the dynamically generated filename (e.g., .docx)
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        URL.revokeObjectURL(url); // Clean up the URL
    };

    return (
        <div className="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50 animate-fade-in-fast">
            <div className="theme-bg-card rounded-2xl shadow-2xl p-6 w-full max-w-3xl theme-text-primary">
                <div className="flex justify-between items-start mb-4 border-b theme-border-color pb-3">
                    <div className="flex items-center">
                        {modalContent.icon}
                        <h3 className="text-[24px] leading-[32px] font-bold theme-text-highlight-color ml-3">{modalContent.title}</h3>
                    </div>
                    <button onClick={onClose} className="p-1 rounded-full theme-text-secondary hover:bg-gray-100 dark:hover:bg-gray-700">
                        <X size={24} />
                    </button>
                </div>
                <div className="space-y-4 theme-text-secondary max-h-[70vh] overflow-y-auto custom-scrollbar pr-2">
                    {/* Render content with improved styling */}
                    <div className="prose prose-invert max-w-none theme-text-primary">
                        <pre className="whitespace-pre-wrap font-mono text-sm bg-gray-100 dark:bg-gray-700 p-4 rounded-md">
                            {modalContent.content}
                        </pre>
                    </div>
                </div>
                <div className="flex justify-end pt-6 mt-6 border-t theme-border-color space-x-2">
                    <button
                        type="button"
                        onClick={handleDownload}
                        className="bg-blue-600 text-white font-bold py-2 px-4 rounded-md text-sm hover:bg-blue-500 flex items-center"
                    >
                        <Download size={16} className="mr-2"/> Download
                    </button>
                    <button type="button" onClick={onClose} className="bg-gray-200 dark:bg-gray-700 py-2 px-4 rounded-md text-sm font-medium hover:bg-gray-300 dark:hover:bg-gray-600 theme-text-primary">
                        Close
                    </button>
                </div>
            </div>
        </div>
    );
};

export default SimulateAIOutputModal;